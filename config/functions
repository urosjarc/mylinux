define TITLE =
	printf "\n${BLUE}${UNDERLINE}     $$(echo $1 | sed -e 's/^\s*//g')                    \n\n${NC}"
endef

define ERROR =
	printf "${ERR} !!! $1\n${NC}"
endef

define ALERT=
	printf "${WARN} *** $1\n${NC}"
endef

define INFO =
	printf "${OK} ... $1\n${NC}"
endef

define INSTALL_LOOP =
	for package in $$(grep -vE "^\s*#" $(PACKAGES)/$1 | tr "\n" " ")
	do
	    sudo -H $2 $$package
	done
endef

define INSTALL =
	sudo -H $1 $$(grep -vE "^\s*#" $(PACKAGES)/$2 | tr "\n" " ")
endef

define LINK_BIN =
    $(call INFO,link $$(ln -sfvn $1 $(BIN)/$2))
endef

define MKDIR =
    if [[ ! -e $1 ]]; then
        $(call INFO,$$(mkdir -vp $1))
    elif [[ ! -d $1 ]]; then
        $(call ERROR,path \"$1\" already exists but is not a directory!)
    else
        $(call ALERT,folder \"$1\" already exists ...)
    fi
endef

define GIT_CLONE =
	if [ ! -d $2 ]; then
	    $(call INFO,git clone \"$1\" --> \"$2\")
		git clone $1 $2
	else
	    $(call INFO,git pull \"$2\")
		cd $2; git pull
	fi
endef

define WGET_TAR =
	if [ ! -f $(DOWNLOADS)/$1 ]; then
        $(call INFO,wget \"$1\" --> \"$(DOWNLOADS)\")
		wget -O $(DOWNLOADS)/$1 $2
	else
        $(call ALERT,folder \"$1\" already exists in \"$(DOWNLOADS)\" ...)
	fi
    $(call INFO,extracting \"$1\" to \"$(APPS)\" ...)
    tar -xf $(DOWNLOADS)/$1 -C $(APPS)
endef

define WGET_DEB =
	if [ ! -f $(DOWNLOADS)/$1 ]; then
        $(call INFO,wget \"$1\" --> \"$(DOWNLOADS)\")
		wget -O $(DOWNLOADS)/$1 $2
	else
        $(call ALERT,file \"$1\" already exists in \"$(DOWNLOADS)\" ...)
	fi
    dpkg -i $(DOWNLOADS)/$1
endef

define OPEN_URL =
    $(call INFO,Opening $1)
    sudo -u $(USER) firefox $1 > /dev/null 2>&1
endef

